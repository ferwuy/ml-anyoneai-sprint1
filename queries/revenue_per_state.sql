-- TODO: 
-- This query will return a table with two columns: customer_state and Revenue. 
-- The first one will have the letters that identify the top 10 states 
-- with most revenue and the second one the total revenue of each.

-- HINT: 
-- All orders should have a delivered status and the actual delivery date should be not null.

SELECT
    c."customer_state" AS "customer_state",
    SUM(p."payment_value") AS "Revenue"
FROM
    olist_orders o
JOIN
    olist_order_payments p ON o."order_id" = p."order_id"
JOIN
    olist_customers c ON o."customer_id" = c."customer_id"
WHERE
    o."order_status" = 'delivered'
    AND o."order_delivered_customer_date" IS NOT NULL
GROUP BY
    c."customer_state"
ORDER BY
    "Revenue" DESC
LIMIT 10;

--### Explanation of the Query:
--1. **Filtering**:
--   - The `WHERE` clause ensures that only orders with `order_status = 'delivered'` and a non-null `order_delivered_customer_date` are included.

--2. **Joining Tables**:
--   - `olist_orders` is joined with `olist_order_payments` to get the payment values for each order.
--   - `olist_orders` is also joined with `olist_customers` to retrieve the `customer_state` for each order.

--3. **Aggregation**:
--   - `SUM(p."payment_value")` calculates the total revenue for each state.
--   - The `GROUP BY c."customer_state"` groups the data by state.

--4. **Sorting and Limiting**:
--   - The `ORDER BY "Revenue" DESC` sorts the states by total revenue in descending order.
--   - `LIMIT 10` restricts the output to the top 10 states with the highest revenue.

--### Output Columns:
--- **customer_state**: The state abbreviation of the customer.
--- **Revenue**: The total revenue generated by customers in that state.
